plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def getLocalPropertyByName(String propertyName) {
    def file = rootProject.file("local.properties")
    if (file != null && file.exists() && file.canRead()) {
        def properties  = new Properties()
        properties.load(new FileInputStream(file))
        if (properties[propertyName] != null) {
            return properties[propertyName]
        } else {
           print("Property with $propertyName not found")
        }
    } else {
        print("$LOCAL_PROPERTIES_FILENAME not found")
    }
}

android {
    namespace 'com.example.data'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        buildConfigField "String", "TMDB_API_KEY", "\"${getLocalPropertyByName("tmdb_api_key")}\""
        buildConfigField "String", "TMDB_ACCESS_TOKEN", "\"${getLocalPropertyByName("tmdb_access_token")}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test-jvm:1.6.4"

    // mocking test frameworks
    testImplementation "org.mockito:mockito-core:4.0.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation "io.mockk:mockk:1.12.7"

    implementation "com.google.dagger:hilt-android:${hilt_version}"
    kapt 'com.google.dagger:hilt-compiler:2.45'
    // For instrumentation tests
    androidTestImplementation  "com.google.dagger:hilt-android-testing:${hilt_version}"
    kaptAndroidTest "com.google.dagger:hilt-compiler:${hilt_version}"
    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:${hilt_version}"
    kaptTest "com.google.dagger:hilt-compiler:${hilt_version}"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.3")

    //Room
    implementation "androidx.room:room-runtime:2.5.1"
    kapt "androidx.room:room-compiler:2.5.1"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.5.1"

    implementation project(":domain")
}